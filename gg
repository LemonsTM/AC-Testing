local player = game.Players.LocalPlayer
local character = player.character

local function onPlayerRespawn()
  character = player.character
  part = character:FindFirstChild("BlockRange")
end

_G.SizeMod = 1

local part = character:FindFirstChild("BlockRange")
local text = Instance.new("TextLabel")
text.Name = "SizeText"
text.Parent = player.PlayerGui.Chat.Frame
text.Position = UDim2.new(0, 0, 0, 0)
text.Size = UDim2.new(0, 200, 0, 50)
text.BackgroundTransparency = 1
text.TextScaled = true
text.Font = Enum.Font.SourceSans
text.TextColor3 = Color3.new(1, 1, 1)
text.TextStrokeTransparency = 0

local defaultSize = part.Size
local currentSize = part.Size
local increaseSize = currentSize + Vector3.new(_G.SizeMod, _G.SizeMod, _G.SizeMod)
local decreaseSize = currentSize - Vector3.new(_G.SizeMod, _G.SizeMod, _G.SizeMod)

local function updateText(size)
	if size == defaultSize then
		text.Text = "Default"
	else
		text.Text = "Size: "..math.ceil(size.X)..", "..math.ceil(size.Y)..", "..math.ceil(size.Z)
	end
end

local UIS = game:GetService("UserInputService")
local tDown = false
local uDown = false

UIS.InputBegan:Connect(function(inputObject, GPE)
	if not GPE then
		if inputObject.KeyCode == Enum.KeyCode.T then
			tDown = true
			increaseSize = currentSize + Vector3.new(_G.SizeMod, _G.SizeMod, _G.SizeMod)
			part.Size = increaseSize
			updateText(part.Size)
			currentSize = part.Size
		elseif inputObject.KeyCode == Enum.KeyCode.U then
			uDown = true
			decreaseSize = currentSize - Vector3.new(_G.SizeMod, _G.SizeMod, _G.SizeMod)
			part.Size = decreaseSize
			updateText(part.Size)
			currentSize = part.Size
		elseif inputObject.KeyCode == Enum.KeyCode.RightAlt then
			text.Visible = not text.Visible
		end
	end
end)

UIS.InputEnded:Connect(function(inputObject, GPE)
	if not GPE then
		if inputObject.KeyCode == Enum.KeyCode.T then
			tDown = false
			currentSize = part.Size
		elseif inputObject.KeyCode == Enum.KeyCode.U then
			uDown = false
			currentSize = part.Size
		end
	end
end)

game:GetService("RunService").RenderStepped:Connect(function()
	if tDown then
		local function updateSize()
			part.Size = increaseSize
			updateText(part.Size)
			currentSize = part.Size
		end
		while tDown do
			updateSize()
			wait(1)
		end
	elseif uDown then
		local function updateSize()
			part.Size = decreaseSize
			updateText(part.Size)
			currentSize = part.Size
		end
		while uDown do
			updateSize()
			wait(1)
		end
	else
		updateText(part.Size)
	end
end)


local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	text.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

text.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = text.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

text.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UIS.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

player.CharacterAdded:Connect(onPlayerRespawn)
